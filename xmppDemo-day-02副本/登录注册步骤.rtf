{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset134 PingFangSC-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red100\green56\blue32;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\pard\tx674\pardeftab674\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \CocoaLigature0 1.  
\f2 \'b3\'f5\'ca\'bc\'bb\'af
\f1  \
   
\f2 \'cd\'a8\'d1\'b6\'b9\'dc\'b5\'c0\'b4\'b4\'bd\'a8\'a3\'ac\'c9\'e8\'d6\'c3
\f1 \
        _stream = [[XMPPStream alloc]init];\
        //
\f2 \'c9\'e8\'d6\'c3\'b7\'fe\'ce\'f1\'c6\'f7\'b5\'d8\'d6\'b7
\f1 \
        _stream.hostName = kHostName;\
        //
\f2 \'c9\'e8\'d6\'c3\'b7\'fe\'ce\'f1\'c6\'f7\'b6\'cb\'bf\'da\'ba\'c5
\f1 \
        _stream.hostPort = kHostPort;\
        //
\f2 \'b4\'fa\'c0\'ed\'bb\'d8\'b5\'f7
\f1 \
        [_stream addDelegate:self delegateQueue:dispatch_get_main_queue()];\
\
\
2.  
\f2 \'d7\'d4\'bc\'ba\'b5\'c4\'b7\'bd\'b7\'a8\'d6\'d0\
	\'c9\'e8\'d6\'c3
\f1 XMPPStream
\f2 \'b5\'c4\'ca\'f4\'d0\'d4
\f1 myJID
\f2 \'a3\'ac\'a3\'ac\'c8\'bb\'ba\'f3\'c1\'b4\'bd\'d3\'b7\'fe\'ce\'f1\'c6\'f7\'a3\'ba
\f1  BOOL result = [_stream connectWithTimeout:30 error:&error];\
\
3.
\f2\fs48 \cf3 \'c1\'b4\'bd\'d3\'b7\'fe\'ce\'f1\'c6\'f7\'a3\'a8
\fs28 \cf2 \'d7\'b4\'cc\'ac
\fs48 \cf3 \'a3\'a9\'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8\

\f1\fs28 \cf2 -(void)xmppStreamWillConnect:(XMPPStream *)sender
\f2 \'a3\'bb
\f1 \
- (void)xmppStreamDidConnect:(XMPPStream *)sender
\f2 \'a3\'bb
\f1 \
- (void)xmppStreamConnectDidTimeout:(XMPPStream *)sender
\f2 \'a3\'bb
\f1 \
 - (void)xmppStreamDidDisconnect:(XMPPStream *)sender;\
\
4. - (void)xmppStreamDidConnect:(XMPPStream *)sender
\f2 \'a3\'bb\
	\'d4\'da\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'d6\'d0\'d1\'e9\'d6\'a4\'d2\'d4\'cf\'c2\'c1\'bd\'b8\'f6\'b7\'bd\'b7\'a8
\f1 authenticateWithPassword
\f2 \'ba\'cd
\f1 registerWithPassword      \
\
5.
\f2 \'b7\'fe\'ce\'f1\'c6\'f7\'c1\'b4\'bd\'d3\'b3\'c9\'b9\'a6\'ba\'f3\'b5\'c4\'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8\

\f1   - (void)xmppStreamDidAuthenticate:(XMPPStream *)sender
\f2 \'a3\'a8\'d4\'da\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'d6\'d0
\f1 //
\f2 \'b9\'b9\'d4\'ec\'b3\'f6\'cf\'af\'cf\'fb\'cf\'a2
\f1 \
    XMPPPresence *onLine = [XMPPPresence presenceWithType:@"online"];\
    //
\f2 \'b7\'a2\'cb\'cd\'b5\'bd\'b7\'fe\'ce\'f1\'c6\'f7
\f1 \
    [_stream sendElement:onLine];\

\f2 \cf0 \'a3\'a9\

\f1 \cf2 - (void)xmppStream:(XMPPStream *)sender 
\f2 \'a3\'bb
\f1 \
- (void)xmppStreamDidRegister:(XMPPStream *)sender
\f2 \'a3\'bb
\f1 \
- (void)xmppStream:(XMPPStream *)sender didNotRegister:(NSXMLElement *)error
\f2 \'a3\'bb}